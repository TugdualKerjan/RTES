// soc_system.v

// Generated using ACDS version 18.1 625

`timescale 1 ps / 1 ps
module soc_system (
		input  wire        clk_clk,                                  //                               clk.clk
		output wire [6:0]  nios_hex_0_external_connection_export,    //    nios_hex_0_external_connection.export
		output wire [6:0]  nios_hex_1_external_connection_export,    //    nios_hex_1_external_connection.export
		output wire [6:0]  nios_hex_2_external_connection_export,    //    nios_hex_2_external_connection.export
		output wire [6:0]  nios_hex_3_external_connection_export,    //    nios_hex_3_external_connection.export
		output wire [6:0]  nios_hex_4_external_connection_export,    //    nios_hex_4_external_connection.export
		output wire [6:0]  nios_hex_5_external_connection_export,    //    nios_hex_5_external_connection.export
		output wire [9:0]  nios_leds_external_connection_export,     //     nios_leds_external_connection.export
		input  wire [9:0]  nios_switches_external_connection_export, // nios_switches_external_connection.export
		output wire        pll_0_sdram_clk,                          //                       pll_0_sdram.clk
		input  wire        reset_reset_n,                            //                             reset.reset_n
		output wire [12:0] sdram_controller_0_wire_addr,             //           sdram_controller_0_wire.addr
		output wire [1:0]  sdram_controller_0_wire_ba,               //                                  .ba
		output wire        sdram_controller_0_wire_cas_n,            //                                  .cas_n
		output wire        sdram_controller_0_wire_cke,              //                                  .cke
		output wire        sdram_controller_0_wire_cs_n,             //                                  .cs_n
		inout  wire [15:0] sdram_controller_0_wire_dq,               //                                  .dq
		output wire [1:0]  sdram_controller_0_wire_dqm,              //                                  .dqm
		output wire        sdram_controller_0_wire_ras_n,            //                                  .ras_n
		output wire        sdram_controller_0_wire_we_n              //                                  .we_n
	);

	wire         pll_0_outclk0_clk;                                                   // pll_0:outclk_0 -> [accel_average_0:Clk, irq_mapper:clk, jtag_uart_0:clk, mm_interconnect_0:pll_0_outclk0_clk, nios2_gen2_0:clk, nios_hex_0:clk, nios_hex_1:clk, nios_hex_2:clk, nios_hex_3:clk, nios_hex_4:clk, nios_hex_5:clk, nios_leds:clk, nios_switches:clk, performance_counter_0:clk, rst_controller:clk, sysid:clock, timer_0:clk]
	wire         pll_0_outclk1_clk;                                                   // pll_0:outclk_1 -> [mm_interconnect_0:pll_0_outclk1_clk, rst_controller_002:clk, sdram_controller_0:clk]
	wire  [31:0] accel_average_0_avalon_master_readdata;                              // mm_interconnect_0:accel_average_0_avalon_master_readdata -> accel_average_0:mReadData
	wire         accel_average_0_avalon_master_waitrequest;                           // mm_interconnect_0:accel_average_0_avalon_master_waitrequest -> accel_average_0:mWaitRequest
	wire  [31:0] accel_average_0_avalon_master_address;                               // accel_average_0:mAddress -> mm_interconnect_0:accel_average_0_avalon_master_address
	wire         accel_average_0_avalon_master_read;                                  // accel_average_0:mRead -> mm_interconnect_0:accel_average_0_avalon_master_read
	wire         accel_average_0_avalon_master_write;                                 // accel_average_0:mWrite -> mm_interconnect_0:accel_average_0_avalon_master_write
	wire  [31:0] accel_average_0_avalon_master_writedata;                             // accel_average_0:mWriteData -> mm_interconnect_0:accel_average_0_avalon_master_writedata
	wire  [31:0] nios2_gen2_0_data_master_readdata;                                   // mm_interconnect_0:nios2_gen2_0_data_master_readdata -> nios2_gen2_0:d_readdata
	wire         nios2_gen2_0_data_master_waitrequest;                                // mm_interconnect_0:nios2_gen2_0_data_master_waitrequest -> nios2_gen2_0:d_waitrequest
	wire         nios2_gen2_0_data_master_debugaccess;                                // nios2_gen2_0:debug_mem_slave_debugaccess_to_roms -> mm_interconnect_0:nios2_gen2_0_data_master_debugaccess
	wire  [26:0] nios2_gen2_0_data_master_address;                                    // nios2_gen2_0:d_address -> mm_interconnect_0:nios2_gen2_0_data_master_address
	wire   [3:0] nios2_gen2_0_data_master_byteenable;                                 // nios2_gen2_0:d_byteenable -> mm_interconnect_0:nios2_gen2_0_data_master_byteenable
	wire         nios2_gen2_0_data_master_read;                                       // nios2_gen2_0:d_read -> mm_interconnect_0:nios2_gen2_0_data_master_read
	wire         nios2_gen2_0_data_master_write;                                      // nios2_gen2_0:d_write -> mm_interconnect_0:nios2_gen2_0_data_master_write
	wire  [31:0] nios2_gen2_0_data_master_writedata;                                  // nios2_gen2_0:d_writedata -> mm_interconnect_0:nios2_gen2_0_data_master_writedata
	wire  [31:0] nios2_gen2_0_instruction_master_readdata;                            // mm_interconnect_0:nios2_gen2_0_instruction_master_readdata -> nios2_gen2_0:i_readdata
	wire         nios2_gen2_0_instruction_master_waitrequest;                         // mm_interconnect_0:nios2_gen2_0_instruction_master_waitrequest -> nios2_gen2_0:i_waitrequest
	wire  [26:0] nios2_gen2_0_instruction_master_address;                             // nios2_gen2_0:i_address -> mm_interconnect_0:nios2_gen2_0_instruction_master_address
	wire         nios2_gen2_0_instruction_master_read;                                // nios2_gen2_0:i_read -> mm_interconnect_0:nios2_gen2_0_instruction_master_read
	wire         mm_interconnect_0_sdram_controller_0_s1_chipselect;                  // mm_interconnect_0:sdram_controller_0_s1_chipselect -> sdram_controller_0:az_cs
	wire  [15:0] mm_interconnect_0_sdram_controller_0_s1_readdata;                    // sdram_controller_0:za_data -> mm_interconnect_0:sdram_controller_0_s1_readdata
	wire         mm_interconnect_0_sdram_controller_0_s1_waitrequest;                 // sdram_controller_0:za_waitrequest -> mm_interconnect_0:sdram_controller_0_s1_waitrequest
	wire  [24:0] mm_interconnect_0_sdram_controller_0_s1_address;                     // mm_interconnect_0:sdram_controller_0_s1_address -> sdram_controller_0:az_addr
	wire         mm_interconnect_0_sdram_controller_0_s1_read;                        // mm_interconnect_0:sdram_controller_0_s1_read -> sdram_controller_0:az_rd_n
	wire   [1:0] mm_interconnect_0_sdram_controller_0_s1_byteenable;                  // mm_interconnect_0:sdram_controller_0_s1_byteenable -> sdram_controller_0:az_be_n
	wire         mm_interconnect_0_sdram_controller_0_s1_readdatavalid;               // sdram_controller_0:za_valid -> mm_interconnect_0:sdram_controller_0_s1_readdatavalid
	wire         mm_interconnect_0_sdram_controller_0_s1_write;                       // mm_interconnect_0:sdram_controller_0_s1_write -> sdram_controller_0:az_wr_n
	wire  [15:0] mm_interconnect_0_sdram_controller_0_s1_writedata;                   // mm_interconnect_0:sdram_controller_0_s1_writedata -> sdram_controller_0:az_data
	wire  [31:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata;             // nios2_gen2_0:debug_mem_slave_readdata -> mm_interconnect_0:nios2_gen2_0_debug_mem_slave_readdata
	wire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest;          // nios2_gen2_0:debug_mem_slave_waitrequest -> mm_interconnect_0:nios2_gen2_0_debug_mem_slave_waitrequest
	wire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess;          // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_debugaccess -> nios2_gen2_0:debug_mem_slave_debugaccess
	wire   [8:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address;              // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_address -> nios2_gen2_0:debug_mem_slave_address
	wire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read;                 // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_read -> nios2_gen2_0:debug_mem_slave_read
	wire   [3:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable;           // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_byteenable -> nios2_gen2_0:debug_mem_slave_byteenable
	wire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write;                // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_write -> nios2_gen2_0:debug_mem_slave_write
	wire  [31:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata;            // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_writedata -> nios2_gen2_0:debug_mem_slave_writedata
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect;          // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_chipselect -> jtag_uart_0:av_chipselect
	wire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata;            // jtag_uart_0:av_readdata -> mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_readdata
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest;         // jtag_uart_0:av_waitrequest -> mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_waitrequest
	wire   [0:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address;             // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_address -> jtag_uart_0:av_address
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read;                // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_read -> jtag_uart_0:av_read_n
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write;               // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_write -> jtag_uart_0:av_write_n
	wire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata;           // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_writedata -> jtag_uart_0:av_writedata
	wire         mm_interconnect_0_accel_average_0_avalon_slave_0_chipselect;         // mm_interconnect_0:accel_average_0_avalon_slave_0_chipselect -> accel_average_0:sChipSelect
	wire  [31:0] mm_interconnect_0_accel_average_0_avalon_slave_0_readdata;           // accel_average_0:sReadData -> mm_interconnect_0:accel_average_0_avalon_slave_0_readdata
	wire   [1:0] mm_interconnect_0_accel_average_0_avalon_slave_0_address;            // mm_interconnect_0:accel_average_0_avalon_slave_0_address -> accel_average_0:sAddress
	wire         mm_interconnect_0_accel_average_0_avalon_slave_0_read;               // mm_interconnect_0:accel_average_0_avalon_slave_0_read -> accel_average_0:sRead
	wire         mm_interconnect_0_accel_average_0_avalon_slave_0_write;              // mm_interconnect_0:accel_average_0_avalon_slave_0_write -> accel_average_0:sWrite
	wire  [31:0] mm_interconnect_0_accel_average_0_avalon_slave_0_writedata;          // mm_interconnect_0:accel_average_0_avalon_slave_0_writedata -> accel_average_0:sWriteData
	wire  [31:0] mm_interconnect_0_sysid_control_slave_readdata;                      // sysid:readdata -> mm_interconnect_0:sysid_control_slave_readdata
	wire   [0:0] mm_interconnect_0_sysid_control_slave_address;                       // mm_interconnect_0:sysid_control_slave_address -> sysid:address
	wire  [31:0] mm_interconnect_0_performance_counter_0_control_slave_readdata;      // performance_counter_0:readdata -> mm_interconnect_0:performance_counter_0_control_slave_readdata
	wire   [3:0] mm_interconnect_0_performance_counter_0_control_slave_address;       // mm_interconnect_0:performance_counter_0_control_slave_address -> performance_counter_0:address
	wire         mm_interconnect_0_performance_counter_0_control_slave_begintransfer; // mm_interconnect_0:performance_counter_0_control_slave_begintransfer -> performance_counter_0:begintransfer
	wire         mm_interconnect_0_performance_counter_0_control_slave_write;         // mm_interconnect_0:performance_counter_0_control_slave_write -> performance_counter_0:write
	wire  [31:0] mm_interconnect_0_performance_counter_0_control_slave_writedata;     // mm_interconnect_0:performance_counter_0_control_slave_writedata -> performance_counter_0:writedata
	wire  [31:0] mm_interconnect_0_nios_switches_s1_readdata;                         // nios_switches:readdata -> mm_interconnect_0:nios_switches_s1_readdata
	wire   [1:0] mm_interconnect_0_nios_switches_s1_address;                          // mm_interconnect_0:nios_switches_s1_address -> nios_switches:address
	wire         mm_interconnect_0_nios_leds_s1_chipselect;                           // mm_interconnect_0:nios_leds_s1_chipselect -> nios_leds:chipselect
	wire  [31:0] mm_interconnect_0_nios_leds_s1_readdata;                             // nios_leds:readdata -> mm_interconnect_0:nios_leds_s1_readdata
	wire   [1:0] mm_interconnect_0_nios_leds_s1_address;                              // mm_interconnect_0:nios_leds_s1_address -> nios_leds:address
	wire         mm_interconnect_0_nios_leds_s1_write;                                // mm_interconnect_0:nios_leds_s1_write -> nios_leds:write_n
	wire  [31:0] mm_interconnect_0_nios_leds_s1_writedata;                            // mm_interconnect_0:nios_leds_s1_writedata -> nios_leds:writedata
	wire         mm_interconnect_0_nios_hex_0_s1_chipselect;                          // mm_interconnect_0:nios_hex_0_s1_chipselect -> nios_hex_0:chipselect
	wire  [31:0] mm_interconnect_0_nios_hex_0_s1_readdata;                            // nios_hex_0:readdata -> mm_interconnect_0:nios_hex_0_s1_readdata
	wire   [1:0] mm_interconnect_0_nios_hex_0_s1_address;                             // mm_interconnect_0:nios_hex_0_s1_address -> nios_hex_0:address
	wire         mm_interconnect_0_nios_hex_0_s1_write;                               // mm_interconnect_0:nios_hex_0_s1_write -> nios_hex_0:write_n
	wire  [31:0] mm_interconnect_0_nios_hex_0_s1_writedata;                           // mm_interconnect_0:nios_hex_0_s1_writedata -> nios_hex_0:writedata
	wire         mm_interconnect_0_nios_hex_1_s1_chipselect;                          // mm_interconnect_0:nios_hex_1_s1_chipselect -> nios_hex_1:chipselect
	wire  [31:0] mm_interconnect_0_nios_hex_1_s1_readdata;                            // nios_hex_1:readdata -> mm_interconnect_0:nios_hex_1_s1_readdata
	wire   [1:0] mm_interconnect_0_nios_hex_1_s1_address;                             // mm_interconnect_0:nios_hex_1_s1_address -> nios_hex_1:address
	wire         mm_interconnect_0_nios_hex_1_s1_write;                               // mm_interconnect_0:nios_hex_1_s1_write -> nios_hex_1:write_n
	wire  [31:0] mm_interconnect_0_nios_hex_1_s1_writedata;                           // mm_interconnect_0:nios_hex_1_s1_writedata -> nios_hex_1:writedata
	wire         mm_interconnect_0_nios_hex_2_s1_chipselect;                          // mm_interconnect_0:nios_hex_2_s1_chipselect -> nios_hex_2:chipselect
	wire  [31:0] mm_interconnect_0_nios_hex_2_s1_readdata;                            // nios_hex_2:readdata -> mm_interconnect_0:nios_hex_2_s1_readdata
	wire   [1:0] mm_interconnect_0_nios_hex_2_s1_address;                             // mm_interconnect_0:nios_hex_2_s1_address -> nios_hex_2:address
	wire         mm_interconnect_0_nios_hex_2_s1_write;                               // mm_interconnect_0:nios_hex_2_s1_write -> nios_hex_2:write_n
	wire  [31:0] mm_interconnect_0_nios_hex_2_s1_writedata;                           // mm_interconnect_0:nios_hex_2_s1_writedata -> nios_hex_2:writedata
	wire         mm_interconnect_0_nios_hex_3_s1_chipselect;                          // mm_interconnect_0:nios_hex_3_s1_chipselect -> nios_hex_3:chipselect
	wire  [31:0] mm_interconnect_0_nios_hex_3_s1_readdata;                            // nios_hex_3:readdata -> mm_interconnect_0:nios_hex_3_s1_readdata
	wire   [1:0] mm_interconnect_0_nios_hex_3_s1_address;                             // mm_interconnect_0:nios_hex_3_s1_address -> nios_hex_3:address
	wire         mm_interconnect_0_nios_hex_3_s1_write;                               // mm_interconnect_0:nios_hex_3_s1_write -> nios_hex_3:write_n
	wire  [31:0] mm_interconnect_0_nios_hex_3_s1_writedata;                           // mm_interconnect_0:nios_hex_3_s1_writedata -> nios_hex_3:writedata
	wire         mm_interconnect_0_nios_hex_4_s1_chipselect;                          // mm_interconnect_0:nios_hex_4_s1_chipselect -> nios_hex_4:chipselect
	wire  [31:0] mm_interconnect_0_nios_hex_4_s1_readdata;                            // nios_hex_4:readdata -> mm_interconnect_0:nios_hex_4_s1_readdata
	wire   [1:0] mm_interconnect_0_nios_hex_4_s1_address;                             // mm_interconnect_0:nios_hex_4_s1_address -> nios_hex_4:address
	wire         mm_interconnect_0_nios_hex_4_s1_write;                               // mm_interconnect_0:nios_hex_4_s1_write -> nios_hex_4:write_n
	wire  [31:0] mm_interconnect_0_nios_hex_4_s1_writedata;                           // mm_interconnect_0:nios_hex_4_s1_writedata -> nios_hex_4:writedata
	wire         mm_interconnect_0_nios_hex_5_s1_chipselect;                          // mm_interconnect_0:nios_hex_5_s1_chipselect -> nios_hex_5:chipselect
	wire  [31:0] mm_interconnect_0_nios_hex_5_s1_readdata;                            // nios_hex_5:readdata -> mm_interconnect_0:nios_hex_5_s1_readdata
	wire   [1:0] mm_interconnect_0_nios_hex_5_s1_address;                             // mm_interconnect_0:nios_hex_5_s1_address -> nios_hex_5:address
	wire         mm_interconnect_0_nios_hex_5_s1_write;                               // mm_interconnect_0:nios_hex_5_s1_write -> nios_hex_5:write_n
	wire  [31:0] mm_interconnect_0_nios_hex_5_s1_writedata;                           // mm_interconnect_0:nios_hex_5_s1_writedata -> nios_hex_5:writedata
	wire         mm_interconnect_0_timer_0_s1_chipselect;                             // mm_interconnect_0:timer_0_s1_chipselect -> timer_0:chipselect
	wire  [15:0] mm_interconnect_0_timer_0_s1_readdata;                               // timer_0:readdata -> mm_interconnect_0:timer_0_s1_readdata
	wire   [2:0] mm_interconnect_0_timer_0_s1_address;                                // mm_interconnect_0:timer_0_s1_address -> timer_0:address
	wire         mm_interconnect_0_timer_0_s1_write;                                  // mm_interconnect_0:timer_0_s1_write -> timer_0:write_n
	wire  [15:0] mm_interconnect_0_timer_0_s1_writedata;                              // mm_interconnect_0:timer_0_s1_writedata -> timer_0:writedata
	wire         irq_mapper_receiver0_irq;                                            // accel_average_0:IRQ -> irq_mapper:receiver0_irq
	wire         irq_mapper_receiver1_irq;                                            // jtag_uart_0:av_irq -> irq_mapper:receiver1_irq
	wire         irq_mapper_receiver2_irq;                                            // timer_0:irq -> irq_mapper:receiver2_irq
	wire  [31:0] nios2_gen2_0_irq_irq;                                                // irq_mapper:sender_irq -> nios2_gen2_0:irq
	wire         rst_controller_reset_out_reset;                                      // rst_controller:reset_out -> [accel_average_0:nReset, irq_mapper:reset, jtag_uart_0:rst_n, mm_interconnect_0:accel_average_0_reset_sink_reset_bridge_in_reset_reset, nios2_gen2_0:reset_n, nios_hex_0:reset_n, nios_hex_1:reset_n, nios_hex_2:reset_n, nios_hex_3:reset_n, nios_hex_4:reset_n, nios_hex_5:reset_n, nios_leds:reset_n, nios_switches:reset_n, performance_counter_0:reset_n, rst_translator:in_reset, sysid:reset_n, timer_0:reset_n]
	wire         rst_controller_reset_out_reset_req;                                  // rst_controller:reset_req -> [nios2_gen2_0:reset_req, rst_translator:reset_req_in]
	wire         nios2_gen2_0_debug_reset_request_reset;                              // nios2_gen2_0:debug_reset_request -> [rst_controller:reset_in1, rst_controller_001:reset_in1, rst_controller_002:reset_in1]
	wire         rst_controller_001_reset_out_reset;                                  // rst_controller_001:reset_out -> pll_0:rst
	wire         rst_controller_002_reset_out_reset;                                  // rst_controller_002:reset_out -> [mm_interconnect_0:sdram_controller_0_reset_reset_bridge_in_reset_reset, sdram_controller_0:reset_n]

	accel_averager accel_average_0 (
		.Clk          (pll_0_outclk0_clk),                                           //            clock.clk
		.sAddress     (mm_interconnect_0_accel_average_0_avalon_slave_0_address),    //   avalon_slave_0.address
		.sChipSelect  (mm_interconnect_0_accel_average_0_avalon_slave_0_chipselect), //                 .chipselect
		.sRead        (mm_interconnect_0_accel_average_0_avalon_slave_0_read),       //                 .read
		.sReadData    (mm_interconnect_0_accel_average_0_avalon_slave_0_readdata),   //                 .readdata
		.sWrite       (mm_interconnect_0_accel_average_0_avalon_slave_0_write),      //                 .write
		.sWriteData   (mm_interconnect_0_accel_average_0_avalon_slave_0_writedata),  //                 .writedata
		.mAddress     (accel_average_0_avalon_master_address),                       //    avalon_master.address
		.mRead        (accel_average_0_avalon_master_read),                          //                 .read
		.mReadData    (accel_average_0_avalon_master_readdata),                      //                 .readdata
		.mWaitRequest (accel_average_0_avalon_master_waitrequest),                   //                 .waitrequest
		.mWrite       (accel_average_0_avalon_master_write),                         //                 .write
		.mWriteData   (accel_average_0_avalon_master_writedata),                     //                 .writedata
		.nReset       (~rst_controller_reset_out_reset),                             //       reset_sink.reset_n
		.IRQ          (irq_mapper_receiver0_irq)                                     // interrupt_sender.irq
	);

	soc_system_jtag_uart_0 jtag_uart_0 (
		.clk            (pll_0_outclk0_clk),                                           //               clk.clk
		.rst_n          (~rst_controller_reset_out_reset),                             //             reset.reset_n
		.av_chipselect  (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),  // avalon_jtag_slave.chipselect
		.av_address     (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),     //                  .address
		.av_read_n      (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),       //                  .read_n
		.av_readdata    (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),    //                  .readdata
		.av_write_n     (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),      //                  .write_n
		.av_writedata   (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),   //                  .writedata
		.av_waitrequest (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest), //                  .waitrequest
		.av_irq         (irq_mapper_receiver1_irq)                                     //               irq.irq
	);

	soc_system_nios2_gen2_0 nios2_gen2_0 (
		.clk                                 (pll_0_outclk0_clk),                                          //                       clk.clk
		.reset_n                             (~rst_controller_reset_out_reset),                            //                     reset.reset_n
		.reset_req                           (rst_controller_reset_out_reset_req),                         //                          .reset_req
		.d_address                           (nios2_gen2_0_data_master_address),                           //               data_master.address
		.d_byteenable                        (nios2_gen2_0_data_master_byteenable),                        //                          .byteenable
		.d_read                              (nios2_gen2_0_data_master_read),                              //                          .read
		.d_readdata                          (nios2_gen2_0_data_master_readdata),                          //                          .readdata
		.d_waitrequest                       (nios2_gen2_0_data_master_waitrequest),                       //                          .waitrequest
		.d_write                             (nios2_gen2_0_data_master_write),                             //                          .write
		.d_writedata                         (nios2_gen2_0_data_master_writedata),                         //                          .writedata
		.debug_mem_slave_debugaccess_to_roms (nios2_gen2_0_data_master_debugaccess),                       //                          .debugaccess
		.i_address                           (nios2_gen2_0_instruction_master_address),                    //        instruction_master.address
		.i_read                              (nios2_gen2_0_instruction_master_read),                       //                          .read
		.i_readdata                          (nios2_gen2_0_instruction_master_readdata),                   //                          .readdata
		.i_waitrequest                       (nios2_gen2_0_instruction_master_waitrequest),                //                          .waitrequest
		.irq                                 (nios2_gen2_0_irq_irq),                                       //                       irq.irq
		.debug_reset_request                 (nios2_gen2_0_debug_reset_request_reset),                     //       debug_reset_request.reset
		.debug_mem_slave_address             (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address),     //           debug_mem_slave.address
		.debug_mem_slave_byteenable          (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable),  //                          .byteenable
		.debug_mem_slave_debugaccess         (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess), //                          .debugaccess
		.debug_mem_slave_read                (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read),        //                          .read
		.debug_mem_slave_readdata            (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata),    //                          .readdata
		.debug_mem_slave_waitrequest         (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest), //                          .waitrequest
		.debug_mem_slave_write               (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write),       //                          .write
		.debug_mem_slave_writedata           (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata),   //                          .writedata
		.dummy_ci_port                       ()                                                            // custom_instruction_master.readra
	);

	soc_system_nios_hex_0 nios_hex_0 (
		.clk        (pll_0_outclk0_clk),                          //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),            //               reset.reset_n
		.address    (mm_interconnect_0_nios_hex_0_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_nios_hex_0_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_nios_hex_0_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_nios_hex_0_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_nios_hex_0_s1_readdata),   //                    .readdata
		.out_port   (nios_hex_0_external_connection_export)       // external_connection.export
	);

	soc_system_nios_hex_0 nios_hex_1 (
		.clk        (pll_0_outclk0_clk),                          //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),            //               reset.reset_n
		.address    (mm_interconnect_0_nios_hex_1_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_nios_hex_1_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_nios_hex_1_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_nios_hex_1_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_nios_hex_1_s1_readdata),   //                    .readdata
		.out_port   (nios_hex_1_external_connection_export)       // external_connection.export
	);

	soc_system_nios_hex_0 nios_hex_2 (
		.clk        (pll_0_outclk0_clk),                          //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),            //               reset.reset_n
		.address    (mm_interconnect_0_nios_hex_2_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_nios_hex_2_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_nios_hex_2_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_nios_hex_2_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_nios_hex_2_s1_readdata),   //                    .readdata
		.out_port   (nios_hex_2_external_connection_export)       // external_connection.export
	);

	soc_system_nios_hex_0 nios_hex_3 (
		.clk        (pll_0_outclk0_clk),                          //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),            //               reset.reset_n
		.address    (mm_interconnect_0_nios_hex_3_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_nios_hex_3_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_nios_hex_3_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_nios_hex_3_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_nios_hex_3_s1_readdata),   //                    .readdata
		.out_port   (nios_hex_3_external_connection_export)       // external_connection.export
	);

	soc_system_nios_hex_0 nios_hex_4 (
		.clk        (pll_0_outclk0_clk),                          //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),            //               reset.reset_n
		.address    (mm_interconnect_0_nios_hex_4_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_nios_hex_4_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_nios_hex_4_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_nios_hex_4_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_nios_hex_4_s1_readdata),   //                    .readdata
		.out_port   (nios_hex_4_external_connection_export)       // external_connection.export
	);

	soc_system_nios_hex_0 nios_hex_5 (
		.clk        (pll_0_outclk0_clk),                          //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),            //               reset.reset_n
		.address    (mm_interconnect_0_nios_hex_5_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_nios_hex_5_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_nios_hex_5_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_nios_hex_5_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_nios_hex_5_s1_readdata),   //                    .readdata
		.out_port   (nios_hex_5_external_connection_export)       // external_connection.export
	);

	soc_system_nios_leds nios_leds (
		.clk        (pll_0_outclk0_clk),                         //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),           //               reset.reset_n
		.address    (mm_interconnect_0_nios_leds_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_nios_leds_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_nios_leds_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_nios_leds_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_nios_leds_s1_readdata),   //                    .readdata
		.out_port   (nios_leds_external_connection_export)       // external_connection.export
	);

	soc_system_nios_switches nios_switches (
		.clk      (pll_0_outclk0_clk),                           //                 clk.clk
		.reset_n  (~rst_controller_reset_out_reset),             //               reset.reset_n
		.address  (mm_interconnect_0_nios_switches_s1_address),  //                  s1.address
		.readdata (mm_interconnect_0_nios_switches_s1_readdata), //                    .readdata
		.in_port  (nios_switches_external_connection_export)     // external_connection.export
	);

	soc_system_performance_counter_0 performance_counter_0 (
		.clk           (pll_0_outclk0_clk),                                                   //           clk.clk
		.reset_n       (~rst_controller_reset_out_reset),                                     //         reset.reset_n
		.address       (mm_interconnect_0_performance_counter_0_control_slave_address),       // control_slave.address
		.begintransfer (mm_interconnect_0_performance_counter_0_control_slave_begintransfer), //              .begintransfer
		.readdata      (mm_interconnect_0_performance_counter_0_control_slave_readdata),      //              .readdata
		.write         (mm_interconnect_0_performance_counter_0_control_slave_write),         //              .write
		.writedata     (mm_interconnect_0_performance_counter_0_control_slave_writedata)      //              .writedata
	);

	soc_system_pll_0 pll_0 (
		.refclk   (clk_clk),                            //  refclk.clk
		.rst      (rst_controller_001_reset_out_reset), //   reset.reset
		.outclk_0 (pll_0_outclk0_clk),                  // outclk0.clk
		.outclk_1 (pll_0_outclk1_clk),                  // outclk1.clk
		.outclk_2 (pll_0_sdram_clk),                    // outclk2.clk
		.locked   ()                                    // (terminated)
	);

	soc_system_sdram_controller_0 sdram_controller_0 (
		.clk            (pll_0_outclk1_clk),                                     //   clk.clk
		.reset_n        (~rst_controller_002_reset_out_reset),                   // reset.reset_n
		.az_addr        (mm_interconnect_0_sdram_controller_0_s1_address),       //    s1.address
		.az_be_n        (~mm_interconnect_0_sdram_controller_0_s1_byteenable),   //      .byteenable_n
		.az_cs          (mm_interconnect_0_sdram_controller_0_s1_chipselect),    //      .chipselect
		.az_data        (mm_interconnect_0_sdram_controller_0_s1_writedata),     //      .writedata
		.az_rd_n        (~mm_interconnect_0_sdram_controller_0_s1_read),         //      .read_n
		.az_wr_n        (~mm_interconnect_0_sdram_controller_0_s1_write),        //      .write_n
		.za_data        (mm_interconnect_0_sdram_controller_0_s1_readdata),      //      .readdata
		.za_valid       (mm_interconnect_0_sdram_controller_0_s1_readdatavalid), //      .readdatavalid
		.za_waitrequest (mm_interconnect_0_sdram_controller_0_s1_waitrequest),   //      .waitrequest
		.zs_addr        (sdram_controller_0_wire_addr),                          //  wire.export
		.zs_ba          (sdram_controller_0_wire_ba),                            //      .export
		.zs_cas_n       (sdram_controller_0_wire_cas_n),                         //      .export
		.zs_cke         (sdram_controller_0_wire_cke),                           //      .export
		.zs_cs_n        (sdram_controller_0_wire_cs_n),                          //      .export
		.zs_dq          (sdram_controller_0_wire_dq),                            //      .export
		.zs_dqm         (sdram_controller_0_wire_dqm),                           //      .export
		.zs_ras_n       (sdram_controller_0_wire_ras_n),                         //      .export
		.zs_we_n        (sdram_controller_0_wire_we_n)                           //      .export
	);

	soc_system_sysid sysid (
		.clock    (pll_0_outclk0_clk),                              //           clk.clk
		.reset_n  (~rst_controller_reset_out_reset),                //         reset.reset_n
		.readdata (mm_interconnect_0_sysid_control_slave_readdata), // control_slave.readdata
		.address  (mm_interconnect_0_sysid_control_slave_address)   //              .address
	);

	soc_system_timer_0 timer_0 (
		.clk        (pll_0_outclk0_clk),                       //   clk.clk
		.reset_n    (~rst_controller_reset_out_reset),         // reset.reset_n
		.address    (mm_interconnect_0_timer_0_s1_address),    //    s1.address
		.writedata  (mm_interconnect_0_timer_0_s1_writedata),  //      .writedata
		.readdata   (mm_interconnect_0_timer_0_s1_readdata),   //      .readdata
		.chipselect (mm_interconnect_0_timer_0_s1_chipselect), //      .chipselect
		.write_n    (~mm_interconnect_0_timer_0_s1_write),     //      .write_n
		.irq        (irq_mapper_receiver2_irq)                 //   irq.irq
	);

	soc_system_mm_interconnect_0 mm_interconnect_0 (
		.pll_0_outclk0_clk                                      (pll_0_outclk0_clk),                                                   //                                    pll_0_outclk0.clk
		.pll_0_outclk1_clk                                      (pll_0_outclk1_clk),                                                   //                                    pll_0_outclk1.clk
		.accel_average_0_reset_sink_reset_bridge_in_reset_reset (rst_controller_reset_out_reset),                                      // accel_average_0_reset_sink_reset_bridge_in_reset.reset
		.sdram_controller_0_reset_reset_bridge_in_reset_reset   (rst_controller_002_reset_out_reset),                                  //   sdram_controller_0_reset_reset_bridge_in_reset.reset
		.accel_average_0_avalon_master_address                  (accel_average_0_avalon_master_address),                               //                    accel_average_0_avalon_master.address
		.accel_average_0_avalon_master_waitrequest              (accel_average_0_avalon_master_waitrequest),                           //                                                 .waitrequest
		.accel_average_0_avalon_master_read                     (accel_average_0_avalon_master_read),                                  //                                                 .read
		.accel_average_0_avalon_master_readdata                 (accel_average_0_avalon_master_readdata),                              //                                                 .readdata
		.accel_average_0_avalon_master_write                    (accel_average_0_avalon_master_write),                                 //                                                 .write
		.accel_average_0_avalon_master_writedata                (accel_average_0_avalon_master_writedata),                             //                                                 .writedata
		.nios2_gen2_0_data_master_address                       (nios2_gen2_0_data_master_address),                                    //                         nios2_gen2_0_data_master.address
		.nios2_gen2_0_data_master_waitrequest                   (nios2_gen2_0_data_master_waitrequest),                                //                                                 .waitrequest
		.nios2_gen2_0_data_master_byteenable                    (nios2_gen2_0_data_master_byteenable),                                 //                                                 .byteenable
		.nios2_gen2_0_data_master_read                          (nios2_gen2_0_data_master_read),                                       //                                                 .read
		.nios2_gen2_0_data_master_readdata                      (nios2_gen2_0_data_master_readdata),                                   //                                                 .readdata
		.nios2_gen2_0_data_master_write                         (nios2_gen2_0_data_master_write),                                      //                                                 .write
		.nios2_gen2_0_data_master_writedata                     (nios2_gen2_0_data_master_writedata),                                  //                                                 .writedata
		.nios2_gen2_0_data_master_debugaccess                   (nios2_gen2_0_data_master_debugaccess),                                //                                                 .debugaccess
		.nios2_gen2_0_instruction_master_address                (nios2_gen2_0_instruction_master_address),                             //                  nios2_gen2_0_instruction_master.address
		.nios2_gen2_0_instruction_master_waitrequest            (nios2_gen2_0_instruction_master_waitrequest),                         //                                                 .waitrequest
		.nios2_gen2_0_instruction_master_read                   (nios2_gen2_0_instruction_master_read),                                //                                                 .read
		.nios2_gen2_0_instruction_master_readdata               (nios2_gen2_0_instruction_master_readdata),                            //                                                 .readdata
		.accel_average_0_avalon_slave_0_address                 (mm_interconnect_0_accel_average_0_avalon_slave_0_address),            //                   accel_average_0_avalon_slave_0.address
		.accel_average_0_avalon_slave_0_write                   (mm_interconnect_0_accel_average_0_avalon_slave_0_write),              //                                                 .write
		.accel_average_0_avalon_slave_0_read                    (mm_interconnect_0_accel_average_0_avalon_slave_0_read),               //                                                 .read
		.accel_average_0_avalon_slave_0_readdata                (mm_interconnect_0_accel_average_0_avalon_slave_0_readdata),           //                                                 .readdata
		.accel_average_0_avalon_slave_0_writedata               (mm_interconnect_0_accel_average_0_avalon_slave_0_writedata),          //                                                 .writedata
		.accel_average_0_avalon_slave_0_chipselect              (mm_interconnect_0_accel_average_0_avalon_slave_0_chipselect),         //                                                 .chipselect
		.jtag_uart_0_avalon_jtag_slave_address                  (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),             //                    jtag_uart_0_avalon_jtag_slave.address
		.jtag_uart_0_avalon_jtag_slave_write                    (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),               //                                                 .write
		.jtag_uart_0_avalon_jtag_slave_read                     (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),                //                                                 .read
		.jtag_uart_0_avalon_jtag_slave_readdata                 (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),            //                                                 .readdata
		.jtag_uart_0_avalon_jtag_slave_writedata                (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),           //                                                 .writedata
		.jtag_uart_0_avalon_jtag_slave_waitrequest              (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest),         //                                                 .waitrequest
		.jtag_uart_0_avalon_jtag_slave_chipselect               (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),          //                                                 .chipselect
		.nios2_gen2_0_debug_mem_slave_address                   (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address),              //                     nios2_gen2_0_debug_mem_slave.address
		.nios2_gen2_0_debug_mem_slave_write                     (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write),                //                                                 .write
		.nios2_gen2_0_debug_mem_slave_read                      (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read),                 //                                                 .read
		.nios2_gen2_0_debug_mem_slave_readdata                  (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata),             //                                                 .readdata
		.nios2_gen2_0_debug_mem_slave_writedata                 (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata),            //                                                 .writedata
		.nios2_gen2_0_debug_mem_slave_byteenable                (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable),           //                                                 .byteenable
		.nios2_gen2_0_debug_mem_slave_waitrequest               (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest),          //                                                 .waitrequest
		.nios2_gen2_0_debug_mem_slave_debugaccess               (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess),          //                                                 .debugaccess
		.nios_hex_0_s1_address                                  (mm_interconnect_0_nios_hex_0_s1_address),                             //                                    nios_hex_0_s1.address
		.nios_hex_0_s1_write                                    (mm_interconnect_0_nios_hex_0_s1_write),                               //                                                 .write
		.nios_hex_0_s1_readdata                                 (mm_interconnect_0_nios_hex_0_s1_readdata),                            //                                                 .readdata
		.nios_hex_0_s1_writedata                                (mm_interconnect_0_nios_hex_0_s1_writedata),                           //                                                 .writedata
		.nios_hex_0_s1_chipselect                               (mm_interconnect_0_nios_hex_0_s1_chipselect),                          //                                                 .chipselect
		.nios_hex_1_s1_address                                  (mm_interconnect_0_nios_hex_1_s1_address),                             //                                    nios_hex_1_s1.address
		.nios_hex_1_s1_write                                    (mm_interconnect_0_nios_hex_1_s1_write),                               //                                                 .write
		.nios_hex_1_s1_readdata                                 (mm_interconnect_0_nios_hex_1_s1_readdata),                            //                                                 .readdata
		.nios_hex_1_s1_writedata                                (mm_interconnect_0_nios_hex_1_s1_writedata),                           //                                                 .writedata
		.nios_hex_1_s1_chipselect                               (mm_interconnect_0_nios_hex_1_s1_chipselect),                          //                                                 .chipselect
		.nios_hex_2_s1_address                                  (mm_interconnect_0_nios_hex_2_s1_address),                             //                                    nios_hex_2_s1.address
		.nios_hex_2_s1_write                                    (mm_interconnect_0_nios_hex_2_s1_write),                               //                                                 .write
		.nios_hex_2_s1_readdata                                 (mm_interconnect_0_nios_hex_2_s1_readdata),                            //                                                 .readdata
		.nios_hex_2_s1_writedata                                (mm_interconnect_0_nios_hex_2_s1_writedata),                           //                                                 .writedata
		.nios_hex_2_s1_chipselect                               (mm_interconnect_0_nios_hex_2_s1_chipselect),                          //                                                 .chipselect
		.nios_hex_3_s1_address                                  (mm_interconnect_0_nios_hex_3_s1_address),                             //                                    nios_hex_3_s1.address
		.nios_hex_3_s1_write                                    (mm_interconnect_0_nios_hex_3_s1_write),                               //                                                 .write
		.nios_hex_3_s1_readdata                                 (mm_interconnect_0_nios_hex_3_s1_readdata),                            //                                                 .readdata
		.nios_hex_3_s1_writedata                                (mm_interconnect_0_nios_hex_3_s1_writedata),                           //                                                 .writedata
		.nios_hex_3_s1_chipselect                               (mm_interconnect_0_nios_hex_3_s1_chipselect),                          //                                                 .chipselect
		.nios_hex_4_s1_address                                  (mm_interconnect_0_nios_hex_4_s1_address),                             //                                    nios_hex_4_s1.address
		.nios_hex_4_s1_write                                    (mm_interconnect_0_nios_hex_4_s1_write),                               //                                                 .write
		.nios_hex_4_s1_readdata                                 (mm_interconnect_0_nios_hex_4_s1_readdata),                            //                                                 .readdata
		.nios_hex_4_s1_writedata                                (mm_interconnect_0_nios_hex_4_s1_writedata),                           //                                                 .writedata
		.nios_hex_4_s1_chipselect                               (mm_interconnect_0_nios_hex_4_s1_chipselect),                          //                                                 .chipselect
		.nios_hex_5_s1_address                                  (mm_interconnect_0_nios_hex_5_s1_address),                             //                                    nios_hex_5_s1.address
		.nios_hex_5_s1_write                                    (mm_interconnect_0_nios_hex_5_s1_write),                               //                                                 .write
		.nios_hex_5_s1_readdata                                 (mm_interconnect_0_nios_hex_5_s1_readdata),                            //                                                 .readdata
		.nios_hex_5_s1_writedata                                (mm_interconnect_0_nios_hex_5_s1_writedata),                           //                                                 .writedata
		.nios_hex_5_s1_chipselect                               (mm_interconnect_0_nios_hex_5_s1_chipselect),                          //                                                 .chipselect
		.nios_leds_s1_address                                   (mm_interconnect_0_nios_leds_s1_address),                              //                                     nios_leds_s1.address
		.nios_leds_s1_write                                     (mm_interconnect_0_nios_leds_s1_write),                                //                                                 .write
		.nios_leds_s1_readdata                                  (mm_interconnect_0_nios_leds_s1_readdata),                             //                                                 .readdata
		.nios_leds_s1_writedata                                 (mm_interconnect_0_nios_leds_s1_writedata),                            //                                                 .writedata
		.nios_leds_s1_chipselect                                (mm_interconnect_0_nios_leds_s1_chipselect),                           //                                                 .chipselect
		.nios_switches_s1_address                               (mm_interconnect_0_nios_switches_s1_address),                          //                                 nios_switches_s1.address
		.nios_switches_s1_readdata                              (mm_interconnect_0_nios_switches_s1_readdata),                         //                                                 .readdata
		.performance_counter_0_control_slave_address            (mm_interconnect_0_performance_counter_0_control_slave_address),       //              performance_counter_0_control_slave.address
		.performance_counter_0_control_slave_write              (mm_interconnect_0_performance_counter_0_control_slave_write),         //                                                 .write
		.performance_counter_0_control_slave_readdata           (mm_interconnect_0_performance_counter_0_control_slave_readdata),      //                                                 .readdata
		.performance_counter_0_control_slave_writedata          (mm_interconnect_0_performance_counter_0_control_slave_writedata),     //                                                 .writedata
		.performance_counter_0_control_slave_begintransfer      (mm_interconnect_0_performance_counter_0_control_slave_begintransfer), //                                                 .begintransfer
		.sdram_controller_0_s1_address                          (mm_interconnect_0_sdram_controller_0_s1_address),                     //                            sdram_controller_0_s1.address
		.sdram_controller_0_s1_write                            (mm_interconnect_0_sdram_controller_0_s1_write),                       //                                                 .write
		.sdram_controller_0_s1_read                             (mm_interconnect_0_sdram_controller_0_s1_read),                        //                                                 .read
		.sdram_controller_0_s1_readdata                         (mm_interconnect_0_sdram_controller_0_s1_readdata),                    //                                                 .readdata
		.sdram_controller_0_s1_writedata                        (mm_interconnect_0_sdram_controller_0_s1_writedata),                   //                                                 .writedata
		.sdram_controller_0_s1_byteenable                       (mm_interconnect_0_sdram_controller_0_s1_byteenable),                  //                                                 .byteenable
		.sdram_controller_0_s1_readdatavalid                    (mm_interconnect_0_sdram_controller_0_s1_readdatavalid),               //                                                 .readdatavalid
		.sdram_controller_0_s1_waitrequest                      (mm_interconnect_0_sdram_controller_0_s1_waitrequest),                 //                                                 .waitrequest
		.sdram_controller_0_s1_chipselect                       (mm_interconnect_0_sdram_controller_0_s1_chipselect),                  //                                                 .chipselect
		.sysid_control_slave_address                            (mm_interconnect_0_sysid_control_slave_address),                       //                              sysid_control_slave.address
		.sysid_control_slave_readdata                           (mm_interconnect_0_sysid_control_slave_readdata),                      //                                                 .readdata
		.timer_0_s1_address                                     (mm_interconnect_0_timer_0_s1_address),                                //                                       timer_0_s1.address
		.timer_0_s1_write                                       (mm_interconnect_0_timer_0_s1_write),                                  //                                                 .write
		.timer_0_s1_readdata                                    (mm_interconnect_0_timer_0_s1_readdata),                               //                                                 .readdata
		.timer_0_s1_writedata                                   (mm_interconnect_0_timer_0_s1_writedata),                              //                                                 .writedata
		.timer_0_s1_chipselect                                  (mm_interconnect_0_timer_0_s1_chipselect)                              //                                                 .chipselect
	);

	soc_system_irq_mapper irq_mapper (
		.clk           (pll_0_outclk0_clk),              //       clk.clk
		.reset         (rst_controller_reset_out_reset), // clk_reset.reset
		.receiver0_irq (irq_mapper_receiver0_irq),       // receiver0.irq
		.receiver1_irq (irq_mapper_receiver1_irq),       // receiver1.irq
		.receiver2_irq (irq_mapper_receiver2_irq),       // receiver2.irq
		.sender_irq    (nios2_gen2_0_irq_irq)            //    sender.irq
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (1),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~reset_reset_n),                         // reset_in0.reset
		.reset_in1      (nios2_gen2_0_debug_reset_request_reset), // reset_in1.reset
		.clk            (pll_0_outclk0_clk),                      //       clk.clk
		.reset_out      (rst_controller_reset_out_reset),         // reset_out.reset
		.reset_req      (rst_controller_reset_out_reset_req),     //          .reset_req
		.reset_req_in0  (1'b0),                                   // (terminated)
		.reset_req_in1  (1'b0),                                   // (terminated)
		.reset_in2      (1'b0),                                   // (terminated)
		.reset_req_in2  (1'b0),                                   // (terminated)
		.reset_in3      (1'b0),                                   // (terminated)
		.reset_req_in3  (1'b0),                                   // (terminated)
		.reset_in4      (1'b0),                                   // (terminated)
		.reset_req_in4  (1'b0),                                   // (terminated)
		.reset_in5      (1'b0),                                   // (terminated)
		.reset_req_in5  (1'b0),                                   // (terminated)
		.reset_in6      (1'b0),                                   // (terminated)
		.reset_req_in6  (1'b0),                                   // (terminated)
		.reset_in7      (1'b0),                                   // (terminated)
		.reset_req_in7  (1'b0),                                   // (terminated)
		.reset_in8      (1'b0),                                   // (terminated)
		.reset_req_in8  (1'b0),                                   // (terminated)
		.reset_in9      (1'b0),                                   // (terminated)
		.reset_req_in9  (1'b0),                                   // (terminated)
		.reset_in10     (1'b0),                                   // (terminated)
		.reset_req_in10 (1'b0),                                   // (terminated)
		.reset_in11     (1'b0),                                   // (terminated)
		.reset_req_in11 (1'b0),                                   // (terminated)
		.reset_in12     (1'b0),                                   // (terminated)
		.reset_req_in12 (1'b0),                                   // (terminated)
		.reset_in13     (1'b0),                                   // (terminated)
		.reset_req_in13 (1'b0),                                   // (terminated)
		.reset_in14     (1'b0),                                   // (terminated)
		.reset_req_in14 (1'b0),                                   // (terminated)
		.reset_in15     (1'b0),                                   // (terminated)
		.reset_req_in15 (1'b0)                                    // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("none"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_001 (
		.reset_in0      (~reset_reset_n),                         // reset_in0.reset
		.reset_in1      (nios2_gen2_0_debug_reset_request_reset), // reset_in1.reset
		.clk            (),                                       //       clk.clk
		.reset_out      (rst_controller_001_reset_out_reset),     // reset_out.reset
		.reset_req      (),                                       // (terminated)
		.reset_req_in0  (1'b0),                                   // (terminated)
		.reset_req_in1  (1'b0),                                   // (terminated)
		.reset_in2      (1'b0),                                   // (terminated)
		.reset_req_in2  (1'b0),                                   // (terminated)
		.reset_in3      (1'b0),                                   // (terminated)
		.reset_req_in3  (1'b0),                                   // (terminated)
		.reset_in4      (1'b0),                                   // (terminated)
		.reset_req_in4  (1'b0),                                   // (terminated)
		.reset_in5      (1'b0),                                   // (terminated)
		.reset_req_in5  (1'b0),                                   // (terminated)
		.reset_in6      (1'b0),                                   // (terminated)
		.reset_req_in6  (1'b0),                                   // (terminated)
		.reset_in7      (1'b0),                                   // (terminated)
		.reset_req_in7  (1'b0),                                   // (terminated)
		.reset_in8      (1'b0),                                   // (terminated)
		.reset_req_in8  (1'b0),                                   // (terminated)
		.reset_in9      (1'b0),                                   // (terminated)
		.reset_req_in9  (1'b0),                                   // (terminated)
		.reset_in10     (1'b0),                                   // (terminated)
		.reset_req_in10 (1'b0),                                   // (terminated)
		.reset_in11     (1'b0),                                   // (terminated)
		.reset_req_in11 (1'b0),                                   // (terminated)
		.reset_in12     (1'b0),                                   // (terminated)
		.reset_req_in12 (1'b0),                                   // (terminated)
		.reset_in13     (1'b0),                                   // (terminated)
		.reset_req_in13 (1'b0),                                   // (terminated)
		.reset_in14     (1'b0),                                   // (terminated)
		.reset_req_in14 (1'b0),                                   // (terminated)
		.reset_in15     (1'b0),                                   // (terminated)
		.reset_req_in15 (1'b0)                                    // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_002 (
		.reset_in0      (~reset_reset_n),                         // reset_in0.reset
		.reset_in1      (nios2_gen2_0_debug_reset_request_reset), // reset_in1.reset
		.clk            (pll_0_outclk1_clk),                      //       clk.clk
		.reset_out      (rst_controller_002_reset_out_reset),     // reset_out.reset
		.reset_req      (),                                       // (terminated)
		.reset_req_in0  (1'b0),                                   // (terminated)
		.reset_req_in1  (1'b0),                                   // (terminated)
		.reset_in2      (1'b0),                                   // (terminated)
		.reset_req_in2  (1'b0),                                   // (terminated)
		.reset_in3      (1'b0),                                   // (terminated)
		.reset_req_in3  (1'b0),                                   // (terminated)
		.reset_in4      (1'b0),                                   // (terminated)
		.reset_req_in4  (1'b0),                                   // (terminated)
		.reset_in5      (1'b0),                                   // (terminated)
		.reset_req_in5  (1'b0),                                   // (terminated)
		.reset_in6      (1'b0),                                   // (terminated)
		.reset_req_in6  (1'b0),                                   // (terminated)
		.reset_in7      (1'b0),                                   // (terminated)
		.reset_req_in7  (1'b0),                                   // (terminated)
		.reset_in8      (1'b0),                                   // (terminated)
		.reset_req_in8  (1'b0),                                   // (terminated)
		.reset_in9      (1'b0),                                   // (terminated)
		.reset_req_in9  (1'b0),                                   // (terminated)
		.reset_in10     (1'b0),                                   // (terminated)
		.reset_req_in10 (1'b0),                                   // (terminated)
		.reset_in11     (1'b0),                                   // (terminated)
		.reset_req_in11 (1'b0),                                   // (terminated)
		.reset_in12     (1'b0),                                   // (terminated)
		.reset_req_in12 (1'b0),                                   // (terminated)
		.reset_in13     (1'b0),                                   // (terminated)
		.reset_req_in13 (1'b0),                                   // (terminated)
		.reset_in14     (1'b0),                                   // (terminated)
		.reset_req_in14 (1'b0),                                   // (terminated)
		.reset_in15     (1'b0),                                   // (terminated)
		.reset_req_in15 (1'b0)                                    // (terminated)
	);

endmodule
